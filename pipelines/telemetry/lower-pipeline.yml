---
s3_credentials: &s3_credentials
  bucket: ((ecs.bucket))
  region_name: ((ecs.region_name)) #us-east-2
  access_key_id: ((ecs.accesskey))
  secret_access_key: ((ecs.secretkey))
  endpoint: ((ecs.endpoint))

resources:
- name: pipeline-repo
  type: git
  source:
    uri: ((pipelines.swiss_army_git))
    username: ((secrets.concourse.git_username))
    password: ((secrets.concourse.git_password))
    branch: master
    skip_ssl_verification: true

- name: pipeline_image
  type: docker-image
  source:
    repository: ((pipelines.docker_registry))/pcf-admins/clitools
    insecure_registries: [ ((pipelines.docker_registry)) ]

- name: binary
  type: s3
  source:
    bucket: binaries
    regexp: telemetry-collec(.*)
    access_key_id: ((ecs_user.username))
    endpoint: ((ecs_storage_endpoint))
    secret_access_key: ((ecs_user.password))

- name: schedule
  type: time
  source:
    interval: 168h # 1 week

jobs:
- name: telemetry-site1
  plan:
  - get: schedule
    trigger: true
  - get: binary
  - get: pipeline-repo
  - get: pipeline_image
  - task: collect
    image: pipeline_image
    file: pipeline-repo/tasks/telemetry/collect.yml
    attempts: 5
    params:
      OPS_MANAGER_USERNAME:
      OPS_MANAGER_PASSWORD:
      #WITH_CREDHUB_INFO: true
      CF_API_URL: https://((foundation.cf_api))
      USAGE_SERVICE_URL: https://((foundationusage_service))
      USAGE_SERVICE_CLIENT_ID: ((secrets.concourse.usage_service_id))
      USAGE_SERVICE_CLIENT_SECRET: ((secrets.concourse.usage_service_password))
      OPS_MANAGER_TIMEOUT: 360
      OPS_MANAGER_URL: https://((opsman_url))
      OPS_MANAGER_CLIENT_ID: ((secrets.opsman.client_id))
      OPS_MANAGER_CLIENT_SECRET: ((secrets.opsman.client_secret))
      ENV_TYPE: ((pipelines.telemetry.env_type))
      INSECURE_SKIP_TLS_VERIFY: true
      USAGE_SERVICE_INSECURE_SKIP_TLS_VERIFY: true
  - task: send
    image: pipeline_image
    file: pipeline-repo/tasks/telemetry/send.yml
    params:
      API_KEY: ((telemetry_api_key))
      PROXY_SERVER: ((foundation.proxy_server))
      ENV: ((foundation.name))
      ECS: ((ecs.endpoint))
      ECS_ACCESSKEY: ((ecs.accesskey))
      ECS_SECRETKEY: ((ecs.secretkey))